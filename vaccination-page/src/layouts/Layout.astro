---
import Header from 'layouts/Header/index';
import Footer from 'layouts/Footer/index';
export interface Props {
  title: string;
}

const { title } = Astro.props;
---

<!DOCTYPE html>
<html lang="en">

<html>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width" />
  <link rel="icon" type="image/x-icon" href="/favicon.ico" />
  <link rel="preload" as="image" href="/assets/images/webp/hero-mobile.webp" type="image/webp">
  <link rel="preload" as="image" href="/assets/images/webp/hero-mobile-2x.webp" type="image/webp">
  <link rel="preload" as="image" href="/assets/images/webp/hero-desktop.webp" type="image/webp">
  <link rel="preload" as="image" href="/assets/images/webp/bg-hero-mobile.webp" type="image/webp">
  <link rel="preload" as="image" href="/assets/images/webp/bg-hero-desktop.webp" type="image/webp">
  <meta name="description" content="Vaccination.ng will help you find the nearest centre for vaccination, in all 36 states in Nigeria." />
  <meta property="og:type" content="website" />
  <meta property="og:title" content="Vaccination.ng - COVID-19 Vaccination Got Easier" />
  <meta property="og:description" content="Vaccination.ng will help you find the nearest centre for vaccination, in all 36 states in Nigeria." />
  <meta name="twitter:title" content="Vaccination.ng - COVID-19 Vaccination Got Easier">
  <meta name="twitter:description"
    content="Vaccination.ng will help you find the nearest centre for vaccination, in all 36 states in Nigeria.">
  <meta name="generator" content={Astro.generator} />
  <title>{title}</title>
  <!-- Google Tag Manager -->
  <script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
  new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
  j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
  'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
  })(window,document,'script','dataLayer','GTM-MWJB8MDN');</script>
  <!-- End Google Tag Manager -->
</html>

<body class="min-h-screen m-0 font-primary text-white dark:text-primary text-xl">
  <!-- Header -->
  <Header />

  <!-- Main -->
  <main class="bg-white">
    <slot />
  </main>

  <!-- Footer -->
  <Footer />

  <script>
    window.dataLayer = window.dataLayer || [];
    window.dataLayer.push({
      'event': 'accessPageComplete',
      'clientType': 'vip',
      'accessCountry': 'Viet Nam',
      'accessMethod': 'email'
    });
  </script>

  <!-- Google Tag Manager (noscript) -->
  <noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-MWJB8MDN"
  height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
  <!-- End Google Tag Manager (noscript) -->
</body>
<script defer>
  const colorThemeKey = 'color-theme';
  const darkClass = 'dark';
  const lightClass = 'light';
  const hiddenClass = 'hidden';
  const isUsingDarkMode = localStorage.getItem(colorThemeKey) === darkClass ||
    (!localStorage.getItem(colorThemeKey) && window.matchMedia('(prefers-color-scheme: dark)').matches)
  const themeToggleDarkIcon = document.getElementById('theme-toggle-dark-icon');
  const themeToggleLightIcon = document.getElementById('theme-toggle-light-icon');
  const themeToggleBtn = document.getElementById('theme-toggle');
  const documentElementClassList = document.documentElement.classList;
  const themeToggleLightIconClassList = themeToggleLightIcon.classList;
  const themeToggleDarkIconClassList = themeToggleDarkIcon.classList;
  // Develop switch theme color
  if (isUsingDarkMode) {
    documentElementClassList.add(darkClass);
    themeToggleLightIconClassList.remove(hiddenClass);
  } else {
    documentElementClassList.remove(darkClass)
    themeToggleDarkIconClassList.remove(hiddenClass);
  }

  // Change the icons inside the button based on previous settings
  themeToggleBtn.addEventListener('click', function() {
    const colorTheme = localStorage.getItem(colorThemeKey);
    // toggle icons inside button
    themeToggleDarkIconClassList.toggle(hiddenClass);
    themeToggleLightIconClassList.toggle(hiddenClass);

    // if set via local storage previously
    if (colorTheme) {
      if (colorTheme === lightClass) {
        documentElementClassList.add(darkClass);
        localStorage.setItem(colorThemeKey, darkClass);
      } else {
        documentElementClassList.remove(darkClass);
        localStorage.setItem(colorThemeKey, lightClass);
      }

    // if NOT set via local storage previously
    } else {
      if (documentElementClassList.contains(darkClass)) {
        documentElementClassList.remove(darkClass);
        localStorage.setItem(colorThemeKey, lightClass);
      } else {
        documentElementClassList.add(darkClass);
        localStorage.setItem(colorThemeKey, darkClass);
      }
    }
  });
</script>
</html>
